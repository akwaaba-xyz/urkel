/*
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@openfga.dev
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TypeDefinition {
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "relations", skip_serializing_if = "Option::is_none")]
    pub relations: Option<::std::collections::HashMap<String, crate::models::Userset>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::Metadata>>,
}

impl TypeDefinition {
    pub fn new(r#type: String) -> TypeDefinition {
        TypeDefinition {
            r#type,
            relations: None,
            metadata: None,
        }
    }
}
